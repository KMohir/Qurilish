import os
import json
from google.oauth2.service_account import Credentials
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

class GoogleSheetsManager:
    def __init__(self, credentials_file='credentials.json', spreadsheet_id=None):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ Google Sheets
        
        Args:
            credentials_file (str): –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
            spreadsheet_id (str): ID —Ç–∞–±–ª–∏—Ü—ã Google Sheets
        """
        self.credentials_file = credentials_file
        self.spreadsheet_id = spreadsheet_id or '1w0ZJ7X44AC_GlnlzkytEhZW8-QKsFiaVQPUvn8YmN1E'
        self.service = None
        self._authenticate()
    
    def _authenticate(self):
        """–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ Google Sheets API"""
        try:
            if not os.path.exists(self.credentials_file):
                logger.error(f"–§–∞–π–ª {self.credentials_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                return False
            
            # –û–±–ª–∞—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è Google Sheets API
            SCOPES = [
                'https://www.googleapis.com/auth/spreadsheets',
                'https://www.googleapis.com/auth/drive'
            ]
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            credentials = Credentials.from_service_account_file(
                self.credentials_file, 
                scopes=SCOPES
            )
            
            # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å
            self.service = build('sheets', 'v4', credentials=credentials)
            logger.info("–£—Å–ø–µ—à–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ Google Sheets API")
            return True
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")
            return False
    
    def append_delivery_data(self, delivery_data):
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –¥–æ—Å—Ç–∞–≤–∫–µ –≤ Google Sheets
        
        Args:
            delivery_data (dict): –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –¥–æ—Å—Ç–∞–≤–∫–µ
                {
                    'supplier': '–ü–æ—Å—Ç–∞–≤—â–∏–∫',
                    'object': '–û–±—ä–µ–∫—Ç',
                    'items': [
                        {
                            'name': '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞',
                            'quantity': '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ',
                            'unit': '–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è',
                            'price': '–¶–µ–Ω–∞',
                            'total': '–°—É–º–º–∞',
                            'description': '–û–ø–∏—Å–∞–Ω–∏–µ'
                        }
                    ]
                }
        """
        if not self.service:
            logger.error("–°–µ—Ä–≤–∏—Å Google Sheets –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return False
        
        try:
            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏
            rows = []
            
            for item in delivery_data['items']:
                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ int (—É–±–∏—Ä–∞–µ–º .00)
                quantity = item['quantity']
                if quantity and '.' in quantity:
                    try:
                        quantity = str(int(float(quantity)))
                    except:
                        pass
                
                # –£–±–∏—Ä–∞–µ–º "—Å—û–º" –∏–∑ —Ü–µ–Ω—ã –∏ —Å—É–º–º—ã
                price = item['price'].replace(' —Å—û–º', '').replace(' —Å—É–º', '') if item['price'] else ''
                total = item['total'].replace(' —Å—û–º', '').replace(' —Å—É–º', '') if item['total'] else ''
                
                row = [
                    delivery_data['date'],       # A: –î–∞—Ç–∞ (–ö—É–Ω)
                    delivery_data['supplier'],   # B: –ü–æ—Å—Ç–∞–≤—â–∏–∫ (–ü–æ—Ç—Å–∞–≤—à–∏–∫)
                    delivery_data['object'],     # C: –û–±—ä–µ–∫—Ç –Ω–æ–º–∏
                    item['name'],                # D: –ú–∞—Ö—Å—É–ª–æ—Ç –Ω–æ–º–∏
                    quantity,                    # E: –ú–∏“õ–¥–æ—Ä–∏
                    item['unit'],                # F: –é–ª—á–æ–≤ –±–∏—Ä–ª–∏–≥–∏
                    item['description'],         # G: –ú–∞—Ç–µ—Ä–∏–∞–ª –∏–∑–æ—Ö
                    price,                       # H: –ù–∞—Ä—Ö–∏
                    total                        # I: –°—É–º–º–∞—Å–∏
                ]
                rows.append(row)
            
            # –î–∏–∞–ø–∞–∑–æ–Ω –¥–ª—è –∑–∞–ø–∏—Å–∏ (–õ–∏—Å—Ç1) - —Ä–∞—Å—à–∏—Ä–µ–Ω –¥–æ –∫–æ–ª–æ–Ω–∫–∏ I
            range_name = '–õ–∏—Å—Ç1!A:I'
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            body = {
                'values': rows
            }
            
            result = self.service.spreadsheets().values().append(
                spreadsheetId=self.spreadsheet_id,
                range=range_name,
                valueInputOption='RAW',
                insertDataOption='INSERT_ROWS',
                body=body
            ).execute()
            
            logger.info(f"–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ Google Sheets: {len(rows)} —Å—Ç—Ä–æ–∫")
            return True
            
        except HttpError as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ Google Sheets: {e}")
            return False
        except Exception as e:
            logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
            return False
    
    def test_connection(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets"""
        try:
            if not self.service:
                return False
            
            # –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
            result = self.service.spreadsheets().values().get(
                spreadsheetId=self.spreadsheet_id,
                range='–õ–∏—Å—Ç1!A1:H1'
            ).execute()
            
            logger.info("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets —É—Å–ø–µ—à–Ω–æ")
            return True
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets: {e}")
            return False

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ
def parse_delivery_message(message_text):
    """
    –ü–∞—Ä—Å–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –¥–æ—Å—Ç–∞–≤–∫–µ –∏ –∏–∑–≤–ª–µ–∫–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ
    
    Args:
        message_text (str): –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ
        
    Returns:
        dict: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –¥–æ—Å—Ç–∞–≤–∫–µ
    """
    try:
        lines = message_text.split('\n')
        delivery_data = {
            'supplier': '',
            'object': '',
            'items': []
        }
        
        current_item = None
        
        for line in lines:
            line = line.strip()
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
            if line.startswith('üë§ –ü–æ—Å—Ç–∞–≤—â–∏–∫:'):
                delivery_data['supplier'] = line.replace('üë§ –ü–æ—Å—Ç–∞–≤—â–∏–∫:', '').strip()
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ–±—ä–µ–∫—Ç
            elif line.startswith('üèóÔ∏è –û–±—ä–µ–∫—Ç:'):
                delivery_data['object'] = line.replace('üèóÔ∏è –û–±—ä–µ–∫—Ç:', '').strip()
            
            # –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä
            elif line.startswith('**') and line.endswith('**'):
                if current_item:
                    delivery_data['items'].append(current_item)
                
                current_item = {
                    'name': line.replace('**', '').strip(),
                    'quantity': '',
                    'unit': '',
                    'price': '',
                    'total': '',
                    'description': ''
                }
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞
            elif current_item:
                if line.startswith('üìä –ú–∏“õ–¥–æ—Ä–∏:'):
                    parts = line.replace('üìä –ú–∏“õ–¥–æ—Ä–∏:', '').strip().split()
                    if len(parts) >= 2:
                        current_item['quantity'] = parts[0]
                        current_item['unit'] = parts[1]
                
                elif line.startswith('üí∞ –ù–∞—Ä—Ö–∏:'):
                    current_item['price'] = line.replace('üí∞ –ù–∞—Ä—Ö–∏:', '').strip()
                
                elif line.startswith('üíµ –°—É–º–º–∞:'):
                    current_item['total'] = line.replace('üíµ –°—É–º–º–∞:', '').strip()
                
                elif line.startswith('üìù –ò–∑–æ—Ö:'):
                    current_item['description'] = line.replace('üìù –ò–∑–æ—Ö:', '').strip()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–æ–≤–∞—Ä
        if current_item:
            delivery_data['items'].append(current_item)
        
        return delivery_data
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return None

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
if __name__ == "__main__":
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    sheets_manager = GoogleSheetsManager()
    if sheets_manager.test_connection():
        print("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets!")
