import pandas as pd
import io
from datetime import datetime
import pytz

def get_uzbek_time():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–µ"""
    tz = pytz.timezone('Asia/Tashkent')
    return datetime.now(tz)

def format_uzbek_time():
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ —É–∑–±–µ–∫—Å–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
    uzbek_time = get_uzbek_time()
    return uzbek_time.strftime("%d.%m.%Y %H:%M")

def create_excel_template():
    """–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ Excel –¥–ª—è –∑–∞—è–≤–æ–∫ –Ω–∞ –ø–æ–∫—É–ø–∫—É"""
    df = pd.DataFrame(columns=[
        '–ó–∞–∫–∞–∑—á–∏–∫',
        '–ü–æ—Å—Ç–∞–≤—â–∏–∫', 
        '–û–±—ä–µ–∫—Ç –Ω–æ–º–∏',
        '–ú–∞—Ö—Å—É–ª–æ—Ç –Ω–æ–º–∏',
        '–ú–∏“õ–¥–æ—Ä–∏',
        '–é–ª—á–æ–≤ –±–∏—Ä–ª–∏–≥–∏',
        '–ú–∞—Ç–µ—Ä–∏–∞–ª –∏–∑–æ—Ö'
    ])
    
    # –°–æ–∑–¥–∞–Ω–∏–µ Excel —Ñ–∞–π–ª–∞ –≤ –ø–∞–º—è—Ç–∏
    output = io.BytesIO()
    with pd.ExcelWriter(output, engine='openpyxl') as writer:
        df.to_excel(writer, index=False, sheet_name='–ó–∞—è–≤–∫–∞')
    
    output.seek(0)
    return output

def create_offer_excel_template():
    """–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ Excel –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤"""
    df = pd.DataFrame(columns=[
        '–ù–∞—Ä—Ö–∏',
        '–°—É–º–º–∞—Å–∏'
    ])
    
    output = io.BytesIO()
    with pd.ExcelWriter(output, engine='openpyxl') as writer:
        df.to_excel(writer, index=False, sheet_name='–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ')
    
    output.seek(0)
    return output

def parse_excel_request(file_content):
    """–ü–∞—Ä—Å–∏–Ω–≥ Excel —Ñ–∞–π–ª–∞ —Å –∑–∞—è–≤–∫–æ–π –Ω–∞ –ø–æ–∫—É–ø–∫—É"""
    try:
        df = pd.read_excel(io.BytesIO(file_content))
        requests = []
        
        for _, row in df.iterrows():
            if pd.notna(row['–ó–∞–∫–∞–∑—á–∏–∫']):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ –Ω–µ –ø—É—Å—Ç–∞—è
                request = {
                    'buyer': row.get('–ó–∞–∫–∞–∑—á–∏–∫', ''),
                    'supplier': row.get('–ü–æ—Å—Ç–∞–≤—â–∏–∫', ''),
                    'object_name': row.get('–û–±—ä–µ–∫—Ç –Ω–æ–º–∏', ''),
                    'product_name': row.get('–ú–∞—Ö—Å—É–ª–æ—Ç –Ω–æ–º–∏', ''),
                    'quantity': row.get('–ú–∏“õ–¥–æ—Ä–∏', 0),
                    'unit': row.get('–é–ª—á–æ–≤ –±–∏—Ä–ª–∏–≥–∏', ''),
                    'material_description': row.get('–ú–∞—Ç–µ—Ä–∏–∞–ª –∏–∑–æ—Ö', '')
                }
                requests.append(request)
        
        return requests
    except Exception as e:
        raise ValueError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ Excel —Ñ–∞–π–ª–∞: {str(e)}")

def parse_excel_offer(file_content):
    """–ü–∞—Ä—Å–∏–Ω–≥ Excel —Ñ–∞–π–ª–∞ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞"""
    try:
        df = pd.read_excel(io.BytesIO(file_content))
        offers = []
        
        for _, row in df.iterrows():
            if pd.notna(row['–ù–∞—Ä—Ö–∏']):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ –Ω–µ –ø—É—Å—Ç–∞—è
                offer = {
                    'price': row.get('–ù–∞—Ä—Ö–∏', 0),
                    'total_amount': row.get('–°—É–º–º–∞—Å–∏', 0)
                }
                offers.append(offer)
        
        return offers
    except Exception as e:
        raise ValueError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ Excel —Ñ–∞–π–ª–∞: {str(e)}")

def validate_phone_number(phone):
    """–í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    import re
    # –£–±–∏—Ä–∞–µ–º –≤—Å–µ –ø—Ä–æ–±–µ–ª—ã –∏ —Å–∏–º–≤–æ–ª—ã
    phone = re.sub(r'[^\d+]', '', phone)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–∑–±–µ–∫—Å–∫–∏–µ —Ñ–æ—Ä–º–∞—Ç—ã
    if phone.startswith('+998') and len(phone) == 13:
        return phone
    elif phone.startswith('998') and len(phone) == 12:
        return '+' + phone
    elif phone.startswith('0') and len(phone) == 9:
        return '+998' + phone
    else:
        return None

def format_request_text(request_data):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∑–∞—è–≤–∫–∏"""
    text = f"""
üìã **–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É**

üë§ **–ó–∞–∫–∞–∑—á–∏–∫:** {request_data.get('buyer', '–ù–µ —É–∫–∞–∑–∞–Ω')}
üè¢ **–ü–æ—Å—Ç–∞–≤—â–∏–∫:** {request_data.get('supplier', '–ù–µ —É–∫–∞–∑–∞–Ω')}
üèóÔ∏è **–û–±—ä–µ–∫—Ç:** {request_data.get('object_name', '–ù–µ —É–∫–∞–∑–∞–Ω')}
üì¶ **–¢–æ–≤–∞—Ä:** {request_data.get('product_name', '–ù–µ —É–∫–∞–∑–∞–Ω')}
üìä **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:** {request_data.get('quantity', 0)} {request_data.get('unit', '')}
üìù **–û–ø–∏—Å–∞–Ω–∏–µ:** {request_data.get('material_description', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}

‚è∞ **–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è:** {format_uzbek_time()}
"""
    return text

def format_offer_text(offer_data, seller_name, seller_phone):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"""
    text = f"""
üí∞ **–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞**

üë§ **–ü–æ—Å—Ç–∞–≤—â–∏–∫:** {seller_name}
üìû **–¢–µ–ª–µ—Ñ–æ–Ω:** {seller_phone}
üíµ **–¶–µ–Ω–∞:** {offer_data.get('price', 0)} —Å—É–º
üí∏ **–°—É–º–º–∞:** {offer_data.get('total_amount', 0)} —Å—É–º

‚è∞ **–í—Ä–µ–º—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:** {format_uzbek_time()}
"""
    return text 