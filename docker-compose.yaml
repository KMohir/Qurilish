services:
  db:
    image: postgres:16-alpine # Здесь используется официальное имя образа
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  bot:
    build: .
    image: sfx-savdo-bot:latest
    restart: always
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      ADMIN_IDS: ${ADMIN_IDS}
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      TIMEZONE: ${TIMEZONE}
      LOG_LEVEL: ${LOG_LEVEL}
    volumes:
      - .:/app # Монтируем текущую директорию хоста в /app внутри контейнера
    depends_on:
      db:
        condition: service_healthy

volumes:
  db_data:
